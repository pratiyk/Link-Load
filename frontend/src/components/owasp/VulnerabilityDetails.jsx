import React from "react";
import { Modal, Button, Badge, Tab, Tabs } from "react-bootstrap";

const VulnerabilityDetails = ({ vuln, onClose }) => {
  if (!vuln) return null;
  
  const getSeverityColor = (severity) => {
    switch (severity.toLowerCase()) {
      case 'critical': return 'danger';
      case 'high': return 'danger';
      case 'medium': return 'warning';
      case 'low': return 'info';
      default: return 'secondary';
    }
  };
  
  return (
    <Modal show={!!vuln} onHide={onClose} size="lg">
      <Modal.Header closeButton>
        <Modal.Title>
          {vuln.name}
          <Badge 
            bg={getSeverityColor(vuln.severity)} 
            className="ms-2"
          >
            {vuln.severity}
          </Badge>
        </Modal.Title>
      </Modal.Header>
      <Modal.Body>
        <Tabs defaultActiveKey="details" className="mb-3">
          <Tab eventKey="details" title="Details">
            <div className="mb-3">
              <h6>Description</h6>
              <p>{vuln.description || 'No description available'}</p>
            </div>
            
            <div className="mb-3">
              <h6>Solution</h6>
              <p>{vuln.solution || 'No solution available'}</p>
            </div>
            
            <div className="mb-3">
              <h6>Location</h6>
              <p>
                <strong>URL:</strong> {vuln.url}<br />
                {vuln.parameter && (
                  <>
                    <strong>Parameter:</strong> {vuln.parameter}
                  </>
                )}
              </p>
            </div>
          </Tab>
          
          <Tab eventKey="technical" title="Technical">
            <div className="mb-3">
              <h6>Evidence</h6>
              <pre className="bg-light p-3 rounded">
                {vuln.evidence || 'No evidence captured'}
              </pre>
            </div>
            
            <div className="mb-3">
              <h6>Payload</h6>
              <pre className="bg-light p-3 rounded">
                {vuln.payload || 'No payload information'}
              </pre>
            </div>
            
            <div className="row">
              <div className="col-md-6">
                <h6>Scanner Information</h6>
                <p>
                  <strong>Scanner:</strong> {vuln.scanner}<br />
                  <strong>Confidence:</strong> {vuln.confidence}
                </p>
              </div>
              <div className="col-md-6">
                <h6>Identifiers</h6>
                <p>
                  {vuln.cve_id && (
                    <>
                      <strong>CVE:</strong> {vuln.cve_id}<br />
                    </>
                  )}
                  {vuln.cwe_id && (
                    <>
                      <strong>CWE:</strong> {vuln.cwe_id}<br />
                    </>
                  )}
                  <strong>Discovered:</strong> {new Date(vuln.discovered_at).toLocaleString()}
                </p>
              </div>
            </div>
          </Tab>
          
          <Tab eventKey="references" title="References">
            {vuln.references && vuln.references.length > 0 ? (
              <ul>
                {vuln.references.map((ref, index) => (
                  <li key={index}>
                    <a href={ref} target="_blank" rel="noopener noreferrer">
                      {ref}
                    </a>
                  </li>
                ))}
              </ul>
            ) : (
              <p>No references available</p>
            )}
          </Tab>
        </Tabs>
      </Modal.Body>
      <Modal.Footer>
        <Button variant="secondary" onClick={onClose}>
          Close
        </Button>
      </Modal.Footer>
    </Modal>
  );
};

export default VulnerabilityDetails;